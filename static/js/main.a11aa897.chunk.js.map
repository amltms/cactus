{"version":3,"sources":["components/context/ItemContext.tsx","components/Nav.tsx","api/fetchContent.tsx","components/items/Item.tsx","components/items/ItemList.tsx","components/home/slideshow/Slide.tsx","components/home/slideshow/SlideShow.tsx","components/home/Home.tsx","components/home/SavedItems.tsx","components/items/overview/credits/CreditsProfile.tsx","components/items/overview/credits/ItemCredits.tsx","components/items/overview/OverviewDetails.tsx","components/items/overview/Overview.tsx","components/search/SearchResults.tsx","components/search/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ItemContext","createContext","Bar","styled","div","scrolled","NavLeft","props","showDropDown","Logo","Bars","Search","MdSearch","Nav","useState","setScrolled","showDropdown","setShowDropDown","history","useHistory","useEffect","listen","location","handleScroll","show","window","scrollY","document","addEventListener","removeEventListener","className","activeClassName","to","exact","onClick","getData","url","urlVars","a","axios","get","then","res","data","catch","err","console","log","ItemContainer","ItemImg","img","ItemPreview","SaveIcon","PreviewContent","Item","item","useContext","saved","setSaved","some","i","id","filter","savedValidation","push","media_type","src","poster_path","alt","Grid","ItemList","items","map","SlideContainer","Backdrop","SlideContent","DetailsBtn","button","OverviewText","p","Slide","title","name","overview","backdrop_path","NavBtn","Container","Slider","currentSlide","SlideShow","popularItems","setCurrentSlide","slideArr","length","style","right","HomeContainer","Home","setPopularItems","contentType","match","params","type","results","SavedContainer","Text","SavedItems","Object","keys","Person","Info","Role","PersonImg","CreditsProfile","person","profile_path","character","job","CastList","filterByJob","credits","crew","ItemCredits","writers","setWriters","director","setDirector","e","writer","cast","slice","w","DetailsContainer","Genres","Attribute","OverviewDetails","release_date","first_air_date","substring","runtime","vote_average","marginBottom","genres","g","ItemDetails","Overview","setItem","setCredits","fetchCredits","SearchContainer","SearchResults","SearchBox","input","searchItems","setSearchItems","searching","setSearching","handleSearchInput","target","value","search","placeholder","onChange","App","Provider","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a11aa897.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const ItemContext = createContext<any>(null);\r\n","import { useState, useEffect, FC } from \"react\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { MdSearch } from \"react-icons/md\";\r\n\r\ninterface Scroll {\r\n  scrolled: boolean;\r\n  showDropDown: boolean;\r\n}\r\ninterface NavProps {\r\n  showDropDown: boolean;\r\n}\r\n\r\nconst Bar = styled.div<Scroll>`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  width: 100%;\r\n  padding: 5rem 5rem 0rem 5rem;\r\n  transition: 0.3s;\r\n  ${({ scrolled }) => scrolled && \"background: rgb(0, 0, 0); padding:1rem;\"};\r\n  > a {\r\n    font-size: 1.8rem;\r\n  }\r\n  @media screen and (max-width: 900px) {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nconst NavLeft = styled.div<NavProps>`\r\n  display: flex;\r\n  align-items: baseline;\r\n  a {\r\n    font-size: 1.2rem;\r\n    padding-left: 1.5rem;\r\n    :hover {\r\n      color: #da5d5d;\r\n    }\r\n  }\r\n  a:last-of-type {\r\n    font-size: 2rem;\r\n  }\r\n  @media screen and (max-width: 900px) {\r\n    display: ${(props) => (props.showDropDown ? \"flex\" : \"none\")};\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: black;\r\n    height: 100vh;\r\n    width: 100%;\r\n    z-index: -1;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    a {\r\n      padding: 2.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  a {\r\n    line-height: 0.7;\r\n    font-size: 2.5rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Bars = styled.div`\r\n  display: none;\r\n  @media screen and (max-width: 901px) {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Search = styled(MdSearch)``;\r\n\r\nexport const Nav: FC = () => {\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const [showDropdown, setShowDropDown] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      setShowDropDown(false);\r\n    });\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const show = window.scrollY > 100;\r\n      show ? setScrolled(true) : setScrolled(false);\r\n    };\r\n\r\n    document.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      document.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Bar showDropDown={showDropdown} scrolled={scrolled}>\r\n      <div className=\"flex\">\r\n        <Logo>\r\n          <NavLink activeClassName=\"active\" to=\"/\">\r\n            Sweep\r\n          </NavLink>\r\n        </Logo>\r\n        <NavLeft showDropDown={showDropdown}>\r\n          <NavLink exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink to=\"/movie\">Movies</NavLink>\r\n          <NavLink to=\"/tv\">TV</NavLink>\r\n          <NavLink to=\"/saved\">Saved</NavLink>\r\n          <NavLink to=\"/search\">\r\n            <Search />\r\n          </NavLink>\r\n        </NavLeft>\r\n      </div>\r\n      <Bars>\r\n        <div\r\n          onClick={() => setShowDropDown(!showDropdown)}\r\n          className={`nav-icon ${showDropdown && \" open\"}`}\r\n        >\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </Bars>\r\n    </Bar>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nconst apikey = \"5042d9bd250e2fbd1f65fceff13e225d\";\r\n\r\nconst getData = async (url: string, urlVars?: string) => {\r\n  return await axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/${url}?api_key=${apikey}&language=en-UK${urlVars}`\r\n    )\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const fetchPopular = (contentType: string) => {\r\n  return getData(`trending/${contentType}/week`);\r\n};\r\n\r\nexport const fetchItem = (contentType: string, id: number) => {\r\n  return getData(`${contentType}/${id}`);\r\n};\r\n\r\nexport const fetchCredits = (contentType: string, id: number) => {\r\n  return getData(`${contentType}/${id}/credits`);\r\n};\r\n\r\nexport const fetchSearch = (search: string) => {\r\n  return getData(`search/multi`, `&query=${search}`);\r\n};\r\n","import { ItemAttributes } from \"../interfaces\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BsBookmark, BsBookmarkFill } from \"react-icons/bs\";\r\nimport { FC, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ItemContext } from \"../context/ItemContext\";\r\n\r\nexport type ItemProps = {\r\n  item: ItemAttributes;\r\n};\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 1rem 1rem 1rem 0rem;\r\n  transition: 0.3s;\r\n  position: relative;\r\n  :hover {\r\n    z-index: 2;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst ItemImg = styled.img`\r\n  object-fit: contain;\r\n  border-radius: 1.2rem;\r\n  transition: 0.5s;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 300px;\r\n  @media screen and (max-width: 900px) {\r\n    height: 25rem;\r\n  }\r\n`;\r\n\r\nconst ItemPreview = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  transition: 0.3s;\r\n  z-index: 10;\r\n  font-size: 1.8rem;\r\n  opacity: 0;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst SaveIcon = styled.div`\r\n  position: absolute;\r\n  padding: 1rem;\r\n  right: 0;\r\n`;\r\n\r\nconst PreviewContent = styled.div`\r\n  background: rgba(0, 0, 0, 0.5);\r\n  height: 100%;\r\n  cursor: pointer;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Item: FC<ItemProps> = ({ item }) => {\r\n  const history = useHistory();\r\n\r\n  const { saved, setSaved } = useContext(ItemContext);\r\n\r\n  const savedValidation = (item: ItemAttributes) => {\r\n    if (saved && saved.some((i: ItemAttributes) => i.id === item.id)) {\r\n      setSaved(saved.filter((i: ItemAttributes) => i.id !== item.id));\r\n    } else {\r\n      setSaved([...saved, item]);\r\n    }\r\n  };\r\n\r\n  const overviewHandle = () => {\r\n    history.push(`/overview/${item.media_type}/${item.id}`);\r\n  };\r\n\r\n  return (\r\n    <ItemContainer>\r\n      <ItemPreview>\r\n        <SaveIcon onClick={() => savedValidation(item)}>\r\n          {saved && saved.some((i: ItemAttributes) => i.id === item.id) ? (\r\n            <BsBookmarkFill />\r\n          ) : (\r\n            <BsBookmark />\r\n          )}\r\n        </SaveIcon>\r\n        <PreviewContent onClick={() => overviewHandle()}></PreviewContent>\r\n      </ItemPreview>\r\n      <ItemImg\r\n        src={`https://image.tmdb.org/t/p/w300/${item.poster_path}`}\r\n        alt=\"poster\"\r\n      />\r\n    </ItemContainer>\r\n  );\r\n};\r\n","import { Item } from \"./Item\";\r\nimport { ItemAttributes } from \"../interfaces\";\r\nimport { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport type ItemListProps = {\r\n  items: ItemAttributes[];\r\n};\r\n\r\nconst Grid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ItemList: FC<ItemListProps> = ({ items }) => {\r\n  return (\r\n    <Grid>\r\n      {items.map((i) => i.poster_path && <Item item={i} key={i.id} />)}\r\n    </Grid>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { ItemAttributes } from \"../../interfaces\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  item: ItemAttributes;\r\n}\r\n\r\nconst SlideContainer = styled.div`\r\n  position: relative;\r\n  height: auto;\r\n  min-width: 100%;\r\n  overflow: hidden;\r\n`;\r\nconst Backdrop = styled.img`\r\n  width: 100%;\r\n  mask-image: linear-gradient(\r\n    to top,\r\n    rgba(0, 0, 0, 0) 0%,\r\n    rgba(0, 0, 0, 0.5) 50%,\r\n    rgba(0, 0, 0, 0.4) 100%\r\n  );\r\n  @media screen and (max-width: 900px) {\r\n    height: 70vh;\r\n    width: auto;\r\n    margin-left: 50%;\r\n    transform: translate(-50%, 0%);\r\n  }\r\n`;\r\n\r\nconst SlideContent = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  z-index: 2;\r\n  bottom: 8vw;\r\n  width: 100%;\r\n  padding: 7vw;\r\n  @media screen and (max-width: 900px) {\r\n    bottom: 10%;\r\n    h1 {\r\n      font-size: 3rem;\r\n    }\r\n    p {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DetailsBtn = styled.button`\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  margin-top: 1.5rem;\r\n  padding: 1rem;\r\n  background-color: none;\r\n  color: white;\r\n  border: 1px solid white;\r\n  border-radius: 2.5rem;\r\n\r\n  :hover {\r\n    background: white;\r\n    color: black;\r\n  }\r\n\r\n  @media screen and (max-width: 900px) {\r\n    padding: 0.8rem;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst OverviewText = styled.p`\r\n  overflow: hidden;\r\n  font-size: 1.5rem;\r\n  text-overflow: ellipsis;\r\n  margin-top: 2vw;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  @media (min-width: 1800px) {\r\n    -webkit-line-clamp: 5;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nexport const Slide: FC<Props> = ({ item }) => {\r\n  const history = useHistory();\r\n  const overviewHandle = () => {\r\n    history.push(`/overview/${item.media_type}/${item.id}`);\r\n  };\r\n  return (\r\n    <>\r\n      {item && (\r\n        <SlideContainer>\r\n          <SlideContent>\r\n            <h1>{item.title || item.name}</h1>\r\n            <OverviewText>{item.overview}</OverviewText>\r\n            <DetailsBtn onClick={() => overviewHandle()}>\r\n              More Details\r\n            </DetailsBtn>\r\n          </SlideContent>\r\n          <Backdrop\r\n            src={`https://image.tmdb.org/t/p/original/${item.backdrop_path}`}\r\n          />\r\n        </SlideContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { FC, useState, useEffect } from \"react\";\r\nimport { ItemAttributes } from \"../../interfaces\";\r\nimport styled from \"styled-components\";\r\nimport { MdNavigateBefore, MdNavigateNext } from \"react-icons/md\";\r\nimport { Slide } from \"./Slide\";\r\n\r\ninterface Props {\r\n  popularItems: ItemAttributes[];\r\n}\r\n\r\ninterface SliderProps {\r\n  currentSlide: number;\r\n}\r\n\r\nconst NavBtn = styled.button`\r\n  position: absolute;\r\n  z-index: 100;\r\n  font-size: 5rem;\r\n  opacity: 0;\r\n  padding: 1rem;\r\n  height: 100%;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Slider = styled.div<SliderProps>`\r\n  scrollbar-width: none;\r\n  width: 100%;\r\n  display: flex;\r\n  transition: 0.8s;\r\n  transform: translateX(${(props) => -props.currentSlide * 100}%);\r\n`;\r\n\r\nexport const SlideShow: FC<Props> = ({ popularItems }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  let slideArr = [15, 1, 2];\r\n\r\n  useEffect(() => {\r\n    if (currentSlide > slideArr.length - 1) {\r\n      setCurrentSlide(0);\r\n    } else if (currentSlide < 0) {\r\n      setCurrentSlide(slideArr.length - 1);\r\n    }\r\n  }, [currentSlide, slideArr.length]);\r\n\r\n  return (\r\n    <Container>\r\n      <NavBtn\r\n        style={{ right: 0 }}\r\n        onClick={() => setCurrentSlide(currentSlide + 1)}\r\n      >\r\n        <MdNavigateNext />\r\n      </NavBtn>\r\n\r\n      <NavBtn onClick={() => setCurrentSlide(currentSlide - 1)}>\r\n        <MdNavigateBefore />\r\n      </NavBtn>\r\n      <Slider currentSlide={currentSlide}>\r\n        {slideArr.map((i) => (\r\n          <Slide key={i} item={popularItems[i]} />\r\n        ))}\r\n      </Slider>\r\n    </Container>\r\n  );\r\n};\r\n","import { useEffect, useState, FC } from \"react\";\r\nimport { fetchPopular } from \"../../api/fetchContent\";\r\nimport { ItemList } from \"../items/ItemList\";\r\nimport { ItemAttributes } from \"../interfaces\";\r\nimport { SlideShow } from \"./slideshow/SlideShow\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  match: { params: { type: string } };\r\n}\r\nconst HomeContainer = styled.div``;\r\nconst ItemContainer = styled.div`\r\n  margin-top: -10%;\r\n`;\r\nexport const Home: FC<Props> = (props) => {\r\n  const [popularItems, setPopularItems] = useState<ItemAttributes[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchPopular(props.match.params.type || \"all\").then((data) => {\r\n      setPopularItems(data.results);\r\n    });\r\n  }, [props.match.params.type]);\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <SlideShow popularItems={popularItems} />\r\n      <ItemContainer>\r\n        <ItemList items={popularItems} />\r\n      </ItemContainer>\r\n    </HomeContainer>\r\n  );\r\n};\r\n","import { FC, useContext } from \"react\";\r\nimport { ItemList } from \"../items/ItemList\";\r\nimport styled from \"styled-components\";\r\nimport { ItemContext } from \"../context/ItemContext\";\r\n\r\nconst SavedContainer = styled.div`\r\n  padding: 10vw 6vw;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h2 {\r\n    color: #333;\r\n  }\r\n`;\r\nexport const SavedItems: FC = () => {\r\n  const { saved } = useContext(ItemContext);\r\n  return (\r\n    <>\r\n      {Object.keys(saved).length !== 0 ? (\r\n        <SavedContainer>\r\n          <ItemList items={saved} />\r\n        </SavedContainer>\r\n      ) : (\r\n        <Text>\r\n          <h2>No Items Saved</h2>\r\n        </Text>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Cast } from \"../../../interfaces\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  person: Cast;\r\n}\r\n\r\ninterface ImgProps {\r\n  img: string;\r\n}\r\n\r\nconst Person = styled.div`\r\n  display: flex;\r\n  margin: 0vw 2vw 2vw 0;\r\n`;\r\nconst Info = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst Role = styled.p`\r\n  color: #ccc;\r\n`;\r\n\r\nconst PersonImg = styled.div<ImgProps>`\r\n  height: 10vw;\r\n  width: 10vw;\r\n  border-radius: 50%;\r\n  background: url(${(p) => p.img});\r\n  background-repeat: no-repeat;\r\n  background-size: 100% auto;\r\n  background-position: 0 25%;\r\n  @media (min-width: 1700px) {\r\n    height: 6vw;\r\n    width: 6vw;\r\n  }\r\n`;\r\n\r\nexport const CreditsProfile: FC<Props> = ({ person }) => {\r\n  return (\r\n    <Person>\r\n      <PersonImg\r\n        img={\r\n          person.profile_path\r\n            ? `https://image.tmdb.org/t/p/original/${person.profile_path}`\r\n            : `photo.jpeg`\r\n        }\r\n      />\r\n      <Info>\r\n        <div>\r\n          <h3>{person.name}</h3>\r\n          <Role>{person.character || person.job}</Role>\r\n        </div>\r\n      </Info>\r\n    </Person>\r\n  );\r\n};\r\n","import { FC, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Credits } from \"../../../interfaces\";\r\nimport { CreditsProfile } from \"./CreditsProfile\";\r\n\r\ninterface Props {\r\n  credits: Credits;\r\n}\r\nconst CastList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst filterByJob = (credits: Credits, job: string) => {\r\n  return credits.crew.filter((person) => person.job === job);\r\n};\r\n\r\nexport const ItemCredits: FC<Props> = ({ credits }) => {\r\n  const [writers, setWriters] = useState(filterByJob(credits, \"Writer\"));\r\n  const [director, setDirector] = useState(filterByJob(credits, \"Director\")[0]);\r\n\r\n  useEffect(() => {\r\n    if (writers.some((e) => e.id === director.id)) {\r\n      setDirector({ ...director, job: \"Director / Writer\" });\r\n      setWriters(writers.filter((writer) => writer.id !== director.id));\r\n    }\r\n  }, [director, writers]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Cast</h2>\r\n      <CastList>\r\n        {credits.cast.slice(0, 3).map((person) => (\r\n          <CreditsProfile person={person} />\r\n        ))}\r\n      </CastList>\r\n      {director && (\r\n        <>\r\n          <h2>Crew</h2>\r\n          <CastList>\r\n            {director && <CreditsProfile person={director} />}\r\n\r\n            {writers.map((w) => (\r\n              <CreditsProfile person={w} />\r\n            ))}\r\n          </CastList>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Details } from \"../../interfaces\";\r\nimport { GoStar } from \"react-icons/go\";\r\nimport styled from \"styled-components\";\r\ninterface Props {\r\n  item: Details;\r\n}\r\n\r\nconst DetailsContainer = styled.div`\r\n  display: flex;\r\n  margin: 2.5rem 0;\r\n\r\n  @media screen and (max-width: 900px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  flex: 4;\r\n  p:first-child {\r\n    div:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n  @media screen and (max-width: 900px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Genres = styled.div`\r\n  margin: 1rem 0;\r\n  font-size: 1.25rem;\r\n\r\n  div {\r\n    border: 1px solid #da5d5d;\r\n    padding: 0.7rem;\r\n    margin: 0.5rem 1rem 0.5rem 0rem;\r\n    border-radius: 0.5rem;\r\n  }\r\n  div:last-child {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nconst ItemImg = styled.img`\r\n  width: fit-content;\r\n  object-fit: contain;\r\n  border-radius: 1.2rem;\r\n  transition: 0.5s;\r\n  position: relative;\r\n  overflow: hidden;\r\n  margin-right: 2.5rem;\r\n  height: 300px;\r\n  @media (min-width: 1700px) {\r\n    height: 15vw;\r\n  }\r\n  @media screen and (max-width: 900px) {\r\n    margin: 0 0 2.5rem 0rem;\r\n  }\r\n`;\r\n\r\nconst Attribute = styled.div`\r\n  margin-right: 2rem;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const OverviewDetails: FC<Props> = ({ item }) => {\r\n  return (\r\n    <>\r\n      <h1>{item.title || item.name}</h1>\r\n\r\n      <DetailsContainer>\r\n        <ItemImg\r\n          src={`https://image.tmdb.org/t/p/w300/${item.poster_path}`}\r\n          alt=\"poster\"\r\n        />\r\n        <Info>\r\n          <p>\r\n            <Attribute>\r\n              {(item.release_date || item.first_air_date || \"----\").substring(\r\n                0,\r\n                4\r\n              )}\r\n            </Attribute>\r\n            {item.runtime && <Attribute>{item.runtime} mins</Attribute>}\r\n            <Attribute>\r\n              {item.vote_average} <GoStar style={{ marginBottom: 2 }} />\r\n            </Attribute>\r\n          </p>\r\n\r\n          <Genres>\r\n            {item?.genres.map((g) => (\r\n              <Attribute>{g.name}</Attribute>\r\n            ))}\r\n          </Genres>\r\n          <p>{item.overview}</p>\r\n        </Info>\r\n      </DetailsContainer>\r\n    </>\r\n  );\r\n};\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { fetchItem, fetchCredits } from \"../../../api/fetchContent\";\r\nimport styled from \"styled-components\";\r\nimport { Details, Credits } from \"../../interfaces\";\r\nimport { ItemCredits } from \"./credits/ItemCredits\";\r\nimport { OverviewDetails } from \"./OverviewDetails\";\r\ninterface Props {\r\n  match: { params: { id: number; type: string } };\r\n}\r\n\r\nconst ItemDetails = styled.div`\r\n  padding: 20% 10vw 0 10vw;\r\n`;\r\n\r\nconst Backdrop = styled.img`\r\n  z-index: -1;\r\n  position: fixed;\r\n  opacity: 1;\r\n  width: 100%;\r\n  filter: brightness(60%);\r\n  mask-image: linear-gradient(\r\n    to top,\r\n    rgba(0, 0, 0, 0) 30%,\r\n    rgba(0, 0, 0, 0.7) 100%\r\n  );\r\n  @media screen and (max-width: 900px) {\r\n    height: 100vh;\r\n    width: auto;\r\n    margin-left: 50%;\r\n    transform: translate(-50%, 0%);\r\n  }\r\n`;\r\nexport const Overview: FC<Props> = (props) => {\r\n  const [item, setItem] = useState<Details>();\r\n  const [credits, setCredits] = useState<Credits>();\r\n\r\n  useEffect(() => {\r\n    fetchItem(props.match.params.type, props.match.params.id).then((data) => {\r\n      setItem(data);\r\n    });\r\n    fetchCredits(props.match.params.type, props.match.params.id).then(\r\n      (data) => {\r\n        setCredits(data);\r\n      }\r\n    );\r\n  }, [props.match.params.id, props.match.params.type]);\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        src={`https://image.tmdb.org/t/p/original/${item?.backdrop_path}`}\r\n        alt=\"backdrop\"\r\n      />\r\n      <ItemDetails>\r\n        {item && <OverviewDetails item={item} />}\r\n        {credits && <ItemCredits credits={credits} />}\r\n      </ItemDetails>\r\n    </>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ItemList, ItemListProps } from \"../items/ItemList\";\r\n\r\nconst SearchContainer = styled.div`\r\n  padding: 7vw;\r\n`;\r\nconst Text = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h2 {\r\n    color: #333;\r\n  }\r\n`;\r\nexport const SearchResults: FC<ItemListProps> = ({ items }) => {\r\n  return (\r\n    <SearchContainer>\r\n      {items.length === 0 ? (\r\n        <Text>\r\n          <h2>No Results</h2>\r\n        </Text>\r\n      ) : (\r\n        <ItemList items={items} />\r\n      )}\r\n    </SearchContainer>\r\n  );\r\n};\r\n","import { FC, useState, ChangeEvent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ItemAttributes } from \"../interfaces\";\r\nimport { fetchSearch } from \"../../api/fetchContent\";\r\nimport { SearchResults } from \"./SearchResults\";\r\n\r\ninterface Props {}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 12rem;\r\n`;\r\nconst SearchBox = styled.input`\r\n  background: #222;\r\n  width: 50%;\r\n  padding: 1.5rem 2rem;\r\n  font-size: 2rem;\r\n  border: none;\r\n  color: white;\r\n  border-radius: 5vw;\r\n  transition: 0.2s;\r\n  ::placeholder {\r\n    color: white;\r\n    opacity: 0.5;\r\n  }\r\n`;\r\nexport const Search: FC<Props> = (props) => {\r\n  const [searchItems, setSearchItems] = useState<ItemAttributes[]>([]);\r\n  const [searching, setSearching] = useState(false);\r\n\r\n  const handleSearchInput = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.value) {\r\n      setSearching(true);\r\n      fetchSearch(e.target.value).then((data) => setSearchItems(data.results));\r\n    } else {\r\n      setSearching(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <SearchBox\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          onChange={handleSearchInput}\r\n        />\r\n      </Container>\r\n      {searching && <SearchResults items={searchItems} />}\r\n    </>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport { FC, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ItemContext } from \"./components/context/ItemContext\";\r\nimport { Nav } from \"./components/Nav\";\r\nimport { Home } from \"./components/home/Home\";\r\nimport { SavedItems } from \"./components/home/SavedItems\";\r\nimport { ItemAttributes } from \"./components/interfaces\";\r\nimport { Overview } from \"./components/items/overview/Overview\";\r\nimport { Search } from \"./components/search/Search\";\r\n\r\nconst App: FC = () => {\r\n  const [saved, setSaved] = useState<ItemAttributes[]>([]);\r\n\r\n  return (\r\n    <ItemContext.Provider\r\n      value={{\r\n        saved,\r\n        setSaved,\r\n      }}\r\n    >\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Nav />\r\n          <Switch>\r\n            <Route exact path=\"/overview/:type/:id\" component={Overview} />\r\n            <Route exact path=\"/saved\" component={SavedItems} />\r\n            <Route exact path=\"/search\" component={Search} />\r\n\r\n            <Route exact path={[\"/\", \"/:type\"]} component={Home} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </ItemContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}